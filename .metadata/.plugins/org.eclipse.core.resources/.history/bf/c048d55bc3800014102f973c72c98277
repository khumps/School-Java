import javax.rmi.CORBA.Util;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;

import java.awt.GridLayout;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class RulesPane extends JDialog {
	/**
	 * 
	 */
	private static final long serialVersionUID = -3642648056922948472L;
	JButton setRules = Utils.newButton(Utils.button, "Submit", "set", null);
	JTextArea aliveLabel = Utils.newArea("Number Of neighbors for a dead cell to become alive");
	JTextField becomeAlive = new JTextField();
	JTextArea crowdedLabel = Utils.newArea("Maximium number of neighbors for \n an alive cell to become overcrowded");
	JTextField overCrowded = new JTextField();
	JTextArea lonelyLabel = Utils.newArea("Number Of neighbors for an \n alive cell to become lonely and die");
	JTextField isLonely = new JTextField();
	JButton set = new JButton("Set");
	

	RulesPane(ActionListener listener, String command) {
		JPanel rules = new JPanel();

		
		rules.setLayout(new GridLayout(4,5));
		rules.add(aliveLabel);
		rules.add(becomeAlive);
		rules.add(crowdedLabel);
		rules.add(overCrowded);
		rules.add(lonelyLabel);
		rules.add(isLonely);
		rules.add(set);
		set.addActionListener(listener);
		set.setActionCommand(command);
		add(rules);
		setResizable(false);
		pack();
		setSize(700,100);
		
		

	}

	public int alive()
	{
		String value = becomeAlive.getText();
		if(value.isEmpty())
		return 3;
		return Integer.parseInt(value);
	}
	public int crowded()
	{
		String value = overCrowded.getText();
		if(value.isEmpty())
		return 4;
		return Integer.parseInt(value);
	}
	
	public int lonely()
	{
		String value = isLonely.getText();
		if(value.isEmpty())
		return 1;
		return Integer.parseInt(value);
	}
		
	}
