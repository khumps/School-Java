import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Insets;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.*;

public class LifeBoard extends JPanel implements ActionListener, MouseListener{
	boolean isRunning = false;
	final int boxSize = 20;
	final int boardSize = 30;
	final int boardOffsetX = 200;
	final int boardOffsetY = 100;
	int x = 0;
	int y = 0;
	GameOfLife life = new GameOfLife(boardSize + 1);
	Rectangle[][] cells = new Rectangle[boardSize][boardSize];
	Insets inset;
	Timer timer = new Timer(Integer.parseInt(Display.timerLength.getText()), this);
	public void paintComponent(Graphics g)
	{
		
		inset = getInsets();
		Graphics2D g2 = (Graphics2D) g;
		for (int across = boardOffsetX; across < boardOffsetX
				+ (boardSize * boxSize); across += boxSize) {

			for (int down = boardOffsetY; down < boardOffsetY
					+ (boardSize * boxSize); down += boxSize) {
				if (life.getBoard().board[x][y] == 0) {
					cells[x][y] = new Rectangle(across, down, boxSize, boxSize);
					g2.drawRect(across, down, boxSize, boxSize);
				} else {
					cells[x][y] = new Rectangle(across, down, boxSize, boxSize);
					// g2.drawRect(across, down, boxSize, boxSize);
					g2.fillRect(across, down, boxSize, boxSize);
				}
				y++;
			}
			y = 0;
			x++;

		}
		x = 0;
		y = 0;
	}
	
	LifeBoard()
	{
		this.setPreferredSize(new Dimension(500,500));
	}
	
	@Override
	public void mouseClicked(MouseEvent e) {
	}

	@Override
	public void mouseEntered(MouseEvent arg0) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseExited(MouseEvent arg0) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub
		int x = (e.getX() - boardOffsetX + inset.left) / boxSize;
		int y = ((e.getY() - boardOffsetY + inset.top) / boxSize) + 1;
		if (x < boardSize && x > -1 && y < boardSize && y > -1) {
			System.out.println(x + " " + y);
			if (life.getBoard().board[x][y] == 0)
				life.getBoard().board[x][y] = 1;
			else
				life.getBoard().board[x][y] = 0;
			this.repaint();
		}
	}

	@Override
	public void mouseReleased(MouseEvent arg0) {
		// TODO Auto-generated method stub

	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
}
